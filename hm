local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Hmordium V2",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Hmordium V2",
    LoadingSubtitle = "by Sussy_end",
    ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Hmordium V2"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Hmordium V2 key system",
       Subtitle = "Key System",
       Note = "Contact burser_. on discord for the key", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"https://pastebin.com/raw/YBws1P3p"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local FETab = Window:CreateTab("FE", "shield") -- Title, Image

 local Slider = FETab:CreateSlider({
    Name = "WalkSpeed Slider",
    Range = {1, 350},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "sliderws",
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

local Slider = FETab:CreateSlider({
    Name = "Jump Height",
    Range = {10, 500},
    Increment = 1,
    Suffix = "Height",
    CurrentValue = 10,
    Flag = "Slider3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
     game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
 })

local Button = FETab:CreateButton({
    Name = "Fly gui",
    Callback = function()
     loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
    end,
 })

 local MainTab = Window:CreateTab("Main", "skull")

 local Button = MainTab:CreateButton({
    Name = "Kill aura 1",
    Callback = function()
        local range = 15

        local player = game:GetService("Players").LocalPlayer
         
        game:GetService("RunService").RenderStepped:Connect(function()
            local p = game.Players:GetPlayers()
            for i = 2, #p do local v = p[i].Character
                if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
                    local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
                    if tool and tool:FindFirstChild("Handle") then
                        tool:Activate()
                        for i,v in next, v:GetChildren() do
                            if v:IsA("BasePart") then
                                firetouchinterest(tool.Handle,v,0)
                                firetouchinterest(tool.Handle,v,1)
                            end
                        end
                    end
                end
            end
        end)
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Kill aura 3",
    Callback = function()
        local range = 20

        local player = game:GetService("Players").LocalPlayer
         
        game:GetService("RunService").RenderStepped:Connect(function()
            local p = game.Players:GetPlayers()
            for i = 2, #p do local v = p[i].Character
                if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
                    local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
                    if tool and tool:FindFirstChild("Handle") then
                        tool:Activate()
                        for i,v in next, v:GetChildren() do
                            if v:IsA("BasePart") then
                                firetouchinterest(tool.Handle,v,0)
                                firetouchinterest(tool.Handle,v,1)
                            end
                        end
                    end
                end
            end
        end)
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Kill aura 4",
    Callback = function()
        local range = 15

local player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local CoreGui = game:GetService("StarterGui")

UIS.InputBegan:connect(function(input)
	if input.KeyCode == rangeSubtractkeybind then
	    if PreciseRange == true then
	        range = range - 0.01
	    else
            range = range - 1
        end
        wait()
        if DoNotDisturb == false then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the range was set to"..range})
        end
	end
end)

UIS.InputBegan:connect(function(input)
	if input.KeyCode == rangeAddkeybind then
	    if PreciseRange == true then
	        range = range + 0.01
	    else
            range = range + 1
        end
        wait()
        if DoNotDisturb == false then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the range was set to"..range})
        end
	end
end)

UIS.InputBegan:connect(function(input)
	if input.KeyCode == TogglePreciseRange then
        if PreciseRange == false then
            PreciseRange = true
            if DoNotDisturb == false then
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the Precise range was set to true"})
            end
        else
            PreciseRange = false
            if DoNotDisturb == false then
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the Precise range was set to false"})
            end
        end
        
	end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    local p = game.Players:GetPlayers()
    for i = 2, #p do local v = p[i].Character
        if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                for i,v in next, v:GetChildren() do
                    if v:IsA("BasePart") then
                        firetouchinterest(tool.Handle,v,0)
                        firetouchinterest(tool.Handle,v,1)
                    end
                end
            end
        end
    end
end)

if DoNotDisturb == false then
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Script Load", Text = "the script loaded successfully!"})
end
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Kill aura 5",
    Callback = function()
        local range = 20

local player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local CoreGui = game:GetService("StarterGui")

UIS.InputBegan:connect(function(input)
	if input.KeyCode == rangeSubtractkeybind then
	    if PreciseRange == true then
	        range = range - 0.01
	    else
            range = range - 1
        end
        wait()
        if DoNotDisturb == false then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the range was set to"..range})
        end
	end
end)

UIS.InputBegan:connect(function(input)
	if input.KeyCode == rangeAddkeybind then
	    if PreciseRange == true then
	        range = range + 0.01
	    else
            range = range + 1
        end
        wait()
        if DoNotDisturb == false then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the range was set to"..range})
        end
	end
end)

UIS.InputBegan:connect(function(input)
	if input.KeyCode == TogglePreciseRange then
        if PreciseRange == false then
            PreciseRange = true
            if DoNotDisturb == false then
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the Precise range was set to true"})
            end
        else
            PreciseRange = false
            if DoNotDisturb == false then
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Notification", Text = "the Precise range was set to false"})
            end
        end
        
	end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    local p = game.Players:GetPlayers()
    for i = 2, #p do local v = p[i].Character
        if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                for i,v in next, v:GetChildren() do
                    if v:IsA("BasePart") then
                        firetouchinterest(tool.Handle,v,0)
                        firetouchinterest(tool.Handle,v,1)
                    end
                end
            end
        end
    end
end)

if DoNotDisturb == false then
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Script Load", Text = "the script loaded successfully!"})
end
    end,
 })


 local Button = MainTab:CreateButton({
    Name = "Hovnoje123 gui (has a kill aura)",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
local range = 20
local auraEnabled = false  
local autoEquipEnabled = false  

-- GUI
local screenGui = Instance.new("ScreenGui", game.CoreGui)
local mainFrame = Instance.new("Frame")
local titleLabel = Instance.new("TextLabel")
local uicorner = Instance.new("UICorner")
local auraButton = Instance.new("TextButton")
local equipButton = Instance.new("TextButton")
local crashButton = Instance.new("TextButton")
local infiniteYieldButton = Instance.new("TextButton")
local reloadButton = Instance.new("TextButton")
local glowEffect = Instance.new("UIStroke")
local authorLabel = Instance.new("TextLabel")
local minimizeButton = Instance.new("TextButton")
local rangeLabel = Instance.new("TextLabel")
local decreaseRange = Instance.new("TextButton")
local increaseRange = Instance.new("TextButton")

-- Hlavní okno (moderní aplikace)
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 300, 0, 480)
mainFrame.Position = UDim2.new(0.35, 0, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BackgroundTransparency = 0.1
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true

-- Glow efekt
glowEffect.Parent = mainFrame
glowEffect.Thickness = 2
glowEffect.Color = Color3.fromRGB(0, 255, 127)

-- Zaoblení okrajů
uicorner.CornerRadius = UDim.new(0, 15)
uicorner.Parent = mainFrame

-- Titulek aplikace
titleLabel.Parent = mainFrame
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Text = "⚔️ Kill Aura & Auto Equip ⚡"
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 22
titleLabel.TextXAlignment = Enum.TextXAlignment.Center

-- Kill Aura tlačítko
auraButton.Parent = mainFrame
auraButton.Size = UDim2.new(0, 280, 0, 50)
auraButton.Position = UDim2.new(0, 10, 0, 50)
auraButton.Text = "🔥 Zapnout Kill Auru 🔥"
auraButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
auraButton.TextColor3 = Color3.fromRGB(255, 255, 255)
auraButton.Font = Enum.Font.SourceSansBold
auraButton.TextSize = 18

-- Auto Equip tlačítko
equipButton.Parent = mainFrame
equipButton.Size = UDim2.new(0, 280, 0, 50)
equipButton.Position = UDim2.new(0, 10, 0, 110)
equipButton.Text = "🛡️ Zapnout Auto-Equip 🛡️"
equipButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
equipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
equipButton.Font = Enum.Font.SourceSansBold
equipButton.TextSize = 18

-- Crash Server tlačítko
crashButton.Parent = mainFrame
crashButton.Size = UDim2.new(0, 280, 0, 50)
crashButton.Position = UDim2.new(0, 10, 0, 170)
crashButton.Text = "💥 Crash Server 💥"
crashButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
crashButton.TextColor3 = Color3.fromRGB(255, 255, 255)
crashButton.Font = Enum.Font.SourceSansBold
crashButton.TextSize = 18

-- Infinite Yield tlačítko
infiniteYieldButton.Parent = mainFrame
infiniteYieldButton.Size = UDim2.new(0, 280, 0, 50)
infiniteYieldButton.Position = UDim2.new(0, 10, 0, 230)
infiniteYieldButton.Text = "🧠 Spustit Infinite Yield"
infiniteYieldButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
infiniteYieldButton.TextColor3 = Color3.fromRGB(200, 200, 255)
infiniteYieldButton.Font = Enum.Font.SourceSansBold
infiniteYieldButton.TextSize = 16

-- Reload GUI tlačítko
reloadButton.Parent = mainFrame
reloadButton.Size = UDim2.new(0, 280, 0, 50)
reloadButton.Position = UDim2.new(0, 10, 0, 290)
reloadButton.Text = "🔁 Reload GUI"
reloadButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
reloadButton.TextColor3 = Color3.fromRGB(255, 255, 255)
reloadButton.Font = Enum.Font.SourceSansBold
reloadButton.TextSize = 16

-- Range label
rangeLabel.Parent = mainFrame
rangeLabel.Size = UDim2.new(0, 280, 0, 20)
rangeLabel.Position = UDim2.new(0, 10, 0, 350)
rangeLabel.Text = "🎯 Range: " .. tostring(range)
rangeLabel.BackgroundTransparency = 1
rangeLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
rangeLabel.Font = Enum.Font.SourceSansBold
rangeLabel.TextSize = 16
rangeLabel.TextXAlignment = Enum.TextXAlignment.Center

-- Snížit Range
decreaseRange.Parent = mainFrame
decreaseRange.Size = UDim2.new(0, 130, 0, 30)
decreaseRange.Position = UDim2.new(0, 10, 0, 375)
decreaseRange.Text = "➖ Snížit Range"
decreaseRange.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
decreaseRange.TextColor3 = Color3.fromRGB(255, 255, 255)
decreaseRange.Font = Enum.Font.SourceSansBold
decreaseRange.TextSize = 14

-- Zvýšit Range
increaseRange.Parent = mainFrame
increaseRange.Size = UDim2.new(0, 130, 0, 30)
increaseRange.Position = UDim2.new(0, 150, 0, 375)
increaseRange.Text = "➕ Zvýšit Range"
increaseRange.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
increaseRange.TextColor3 = Color3.fromRGB(255, 255, 255)
increaseRange.Font = Enum.Font.SourceSansBold
increaseRange.TextSize = 14

-- Minimize button
minimizeButton.Parent = mainFrame
minimizeButton.Size = UDim2.new(0, 25, 0, 25)
minimizeButton.Position = UDim2.new(1, -30, 0, 5)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 18

local isMinimized = false

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    for _, v in ipairs(mainFrame:GetChildren()) do
        if v ~= titleLabel and v ~= minimizeButton and (v:IsA("TextButton") or v:IsA("TextLabel")) then
            v.Visible = not isMinimized
        end
    end
    mainFrame.Size = isMinimized and UDim2.new(0, 300, 0, 40) or UDim2.new(0, 300, 0, 480)
end)

-- Podpis
authorLabel.Parent = mainFrame
authorLabel.Size = UDim2.new(1, 0, 0, 20)
authorLabel.Position = UDim2.new(0, 0, 1, -25)
authorLabel.Text = "👑 Created by Hovnoje123 👑"
authorLabel.BackgroundTransparency = 1
authorLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
authorLabel.Font = Enum.Font.SourceSansBold
authorLabel.TextSize = 16
authorLabel.TextXAlignment = Enum.TextXAlignment.Center

-- Funkce tlačítek
auraButton.MouseButton1Click:Connect(function()
    auraEnabled = not auraEnabled
    auraButton.Text = auraEnabled and "❌ Vypnout Kill Auru ❌" or "🔥 Zapnout Kill Auru 🔥"
    auraButton.BackgroundColor3 = auraEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(50, 50, 50)
end)

equipButton.MouseButton1Click:Connect(function()
    autoEquipEnabled = not autoEquipEnabled
    equipButton.Text = autoEquipEnabled and "❌ Vypnout Auto-Equip ❌" or "🛡️ Zapnout Auto-Equip 🛡️"
    equipButton.BackgroundColor3 = autoEquipEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(50, 50, 50)
end)

crashButton.MouseButton1Click:Connect(function()
    game.ReplicatedStorage.UnlockedSwords:FireServer({true, true, true}, "894An3ti44Ex321P3llo99i3t")
end)

infiniteYieldButton.MouseButton1Click:Connect(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

reloadButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
    wait()
    loadstring(game:HttpGet("https://your-script-url-here.com/script.lua"))()
end)

decreaseRange.MouseButton1Click:Connect(function()
    range = math.max(1, range - 5)
    rangeLabel.Text = "🎯 Range: " .. tostring(range)
end)

increaseRange.MouseButton1Click:Connect(function()
    range = range + 5
    rangeLabel.Text = "🎯 Range: " .. tostring(range)
end)

-- Kill Aura logic
game:GetService("RunService").RenderStepped:Connect(function()
    if not auraEnabled then return end

    local players = game.Players:GetPlayers()
    for i = 2, #players do 
        local target = players[i].Character
        if target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 and target:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(target.HumanoidRootPart.Position) <= range then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                for _, part in pairs(target:GetChildren()) do
                    if part:IsA("BasePart") then
                        firetouchinterest(tool.Handle, part, 0)
                        firetouchinterest(tool.Handle, part, 1)
                    end
                end
            end
        end
    end
end)

-- Auto Equip logic
game:GetService("RunService").RenderStepped:Connect(function()
    if autoEquipEnabled then
        local backpack = player.Backpack
        for _, tool in ipairs(backpack:GetChildren()) do
            if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
                tool.Parent = player.Character
                break
            end
        end
    end
end)
    end,
 })


 local Button = MainTab:CreateButton({
    Name = "Whitelist aura",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
local range = 25
local auraEnabled = true

-- Whitelist hráčů podle jména
local whitelist = {
    "hghfhgfhgfhghfghfg",
    "ZabijimRandomLidi4",
    "FlexFightSecurity012",
    "jaurova",
    "FlexFightPro68",
    "Cubot_Nova4",
    "Cubot_Nova3",
    "wzq0x9",
    "Cub0t_01",
    "wzq0x9",
    "angeloheart2x",
    "xwnsgat",
    "WeRroR22",
    "fdgdfgfdgdfgda",
    "Sigmaslim12",
    "lovefr0ggy",
    "FlexFightSecurity010",
    "chill_guy134",
    "viking_fa",
    "YouFrCantMove",
    "nvbnvbnvbnvbfghf",
    "xwnsgat",
}

-- Funkce kontrolující, jestli je hráč na whitelistu
local function isWhitelisted(targetPlayer)
    for _, name in ipairs(whitelist) do
        if targetPlayer.Name == name then
            return true
        end
    end
    return false
end

game:GetService("RunService").RenderStepped:Connect(function()
    if not auraEnabled then return end

    local players = game.Players:GetPlayers()
    for _, targetPlayer in ipairs(players) do
        if targetPlayer ~= player 
           and not isWhitelisted(targetPlayer) 
           and targetPlayer.Character then

            local target = targetPlayer.Character
            if target:FindFirstChild("Humanoid") 
               and target.Humanoid.Health > 0 
               and target:FindFirstChild("HumanoidRootPart") 
               and player:DistanceFromCharacter(target.HumanoidRootPart.Position) <= range then

                local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
                if tool and tool:FindFirstChild("Handle") then
                    tool:Activate()
                    for _, part in pairs(target:GetChildren()) do
                        if part:IsA("BasePart") then
                            firetouchinterest(tool.Handle, part, 0)
                            firetouchinterest(tool.Handle, part, 1)
                        end
                    end
                end
            end
        end
    end
end)
    end,
 })

 


 local Button = FETab:CreateButton({
    Name = "Infinite yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
 })

 local Button = FETab:CreateButton({
    Name = "Fe instant intereact script",
    Callback = function()
        game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
            fireproximityprompt(prompt)
          end)
    end,
 })

 
 local FunTab = Window:CreateTab("Fun", "gamepad") -- Title, Image


local Button = FunTab:CreateButton({
    Name = "loopbring GUI (Better than infinite yield loopbring)",
    Callback = function()
        local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Save file
local saveFile = "LoopBringGuiSave.json"

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "LoopBringGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 600)
frame.Position = UDim2.new(0, 50, 0, 50) -- default
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 3
frame.BorderColor3 = Color3.fromRGB(0, 255, 0)
frame.Active = true
frame.Selectable = true
frame.Parent = screenGui

-- Content frame
local minimized = false
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -35)
contentFrame.Position = UDim2.new(0, 0, 0, 35)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = frame

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -80, 0, 30)
titleLabel.Position = UDim2.new(0, 5, 0, 5)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "LoopBring GUI"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = frame

-- Minimize button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
minimizeBtn.Position = UDim2.new(1, -35, 0, 5)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.Font = Enum.Font.SourceSansBold
minimizeBtn.TextSize = 20
minimizeBtn.Text = "—"
minimizeBtn.Parent = frame

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -70, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 20
closeBtn.Text = "X"
closeBtn.Parent = frame

closeBtn.MouseButton1Click:Connect(function()
	screenGui:Destroy()
end)

-- Vars
local isLooping = false
local loopAll = false
local loopBringUserIds = {}
local selectedPlayer = nil
local selectedUserId = nil
local filteredPlayers = {}

-- 🔹 Load saved data
if isfile and readfile and isfile(saveFile) then
	local success, data = pcall(function()
		return HttpService:JSONDecode(readfile(saveFile))
	end)
	if success and data then
		if data.X and data.Y then
			frame.Position = UDim2.new(0, data.X, 0, data.Y)
		end
		if data.Minimized ~= nil then
			minimized = data.Minimized
			contentFrame.Visible = not minimized
			frame.Size = minimized and UDim2.new(0, 300, 0, 35) or UDim2.new(0, 300, 0, 600)
		end
		if data.SelectedUserId then
			selectedUserId = data.SelectedUserId
		end
	end
end

-- 🔹 Save helper
local function saveGuiData()
	if writefile then
		local posData = {
			X = frame.Position.X.Offset,
			Y = frame.Position.Y.Offset,
			Minimized = minimized,
			SelectedUserId = selectedUserId
		}
		writefile(saveFile, HttpService:JSONEncode(posData))
	end
end

-- Minimize toggle
minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	contentFrame.Visible = not minimized
	frame.Size = minimized and UDim2.new(0, 300, 0, 35) or UDim2.new(0, 300, 0, 600)
	saveGuiData()
end)

-- Search box
local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(0, 280, 0, 25)
searchBox.Position = UDim2.new(0, 10, 0, 10)
searchBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
searchBox.TextColor3 = Color3.new(1, 1, 1)
searchBox.Font = Enum.Font.SourceSans
searchBox.TextSize = 18
searchBox.PlaceholderText = "Search player..."
searchBox.Parent = contentFrame

-- Dropdown
local dropdownFrame = Instance.new("ScrollingFrame")
dropdownFrame.Size = UDim2.new(0, 280, 0, 0)
dropdownFrame.Position = UDim2.new(0, 10, 0, 45)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
dropdownFrame.BorderSizePixel = 1
dropdownFrame.ScrollBarThickness = 6
dropdownFrame.CanvasSize = UDim2.new()
dropdownFrame.Parent = contentFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = dropdownFrame

-- Buttons
local startStopBtn = Instance.new("TextButton")
startStopBtn.Size = UDim2.new(0, 280, 0, 30)
startStopBtn.Text = "LoopBring"
startStopBtn.Parent = contentFrame

local loopAllToggle = Instance.new("TextButton")
loopAllToggle.Size = UDim2.new(0, 280, 0, 30)
loopAllToggle.Text = "Loop All: OFF"
loopAllToggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
loopAllToggle.TextColor3 = Color3.new(1, 1, 1)
loopAllToggle.Parent = contentFrame

-- Refresh dropdown
local function refreshDropdown(filter)
	for _, child in pairs(dropdownFrame:GetChildren()) do
		if child:IsA("TextButton") then child:Destroy() end
	end

	local playersList = {}
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= player then table.insert(playersList, plr) end
	end

	filter = filter or ""
	filter = filter:lower()

	filteredPlayers = {}
	for _, plr in ipairs(playersList) do
		if plr.Name:lower():find(filter) then
			table.insert(filteredPlayers, plr)
		end
	end

	for _, plr in ipairs(filteredPlayers) do
		local btn = Instance.new("TextButton")
		btn.Size = UDim2.new(1, -5, 0, 30)
		btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		btn.TextColor3 = Color3.new(1, 1, 1)
		btn.Font = Enum.Font.SourceSans
		btn.TextSize = 18
		btn.Text = plr.Name
		btn.Parent = dropdownFrame

		if selectedUserId and plr.UserId == selectedUserId then
			selectedPlayer = plr
			btn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
			startStopBtn.Text = "LoopBring: " .. plr.Name
		end

		btn.MouseButton1Click:Connect(function()
			selectedPlayer = plr
			selectedUserId = plr.UserId
			saveGuiData()
			startStopBtn.Text = "LoopBring: " .. plr.Name
			for _, other in ipairs(dropdownFrame:GetChildren()) do
				if other:IsA("TextButton") then
					other.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
				end
			end
			btn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
		end)
	end

	local newHeight = math.min(#filteredPlayers * 30, 450)
	dropdownFrame.Size = UDim2.new(0, 280, 0, newHeight)
	dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, #filteredPlayers * 30)
	startStopBtn.Position = UDim2.new(0, 10, 0, 50 + newHeight)
	loopAllToggle.Position = UDim2.new(0, 10, 0, 90 + newHeight)
end

searchBox:GetPropertyChangedSignal("Text"):Connect(function()
	refreshDropdown(searchBox.Text)
end)

-- LoopBring logic
startStopBtn.MouseButton1Click:Connect(function()
	if isLooping then
		isLooping = false
		startStopBtn.Text = "LoopBring"
		loopBringUserIds = {}
	else
		if selectedPlayer and selectedPlayer ~= player then
			loopBringUserIds = {selectedPlayer.UserId}
			isLooping = true
			startStopBtn.Text = "UnloopBring"
		end
	end
end)

loopAllToggle.MouseButton1Click:Connect(function()
	loopAll = not loopAll
	if loopAll then
		loopAllToggle.Text = "Loop All: ON"
		loopBringUserIds = {}
		for _, plr in pairs(Players:GetPlayers()) do
			if plr ~= player then table.insert(loopBringUserIds, plr.UserId) end
		end
		isLooping = true
		startStopBtn.Text = "UnloopBring"
	else
		loopAllToggle.Text = "Loop All: OFF"
		isLooping = false
		startStopBtn.Text = "LoopBring"
		loopBringUserIds = {}
	end
end)

Players.PlayerAdded:Connect(function() refreshDropdown(searchBox.Text) end)
Players.PlayerRemoving:Connect(function() refreshDropdown(searchBox.Text) end)

refreshDropdown()

-- Teleport loop
local function onCharacterAdded(char)
	local hrp = char:WaitForChild("HumanoidRootPart")
	wait(0.1)
	for _, target in pairs(Players:GetPlayers()) do
		if table.find(loopBringUserIds, target.UserId) and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
			local targetHRP = target.Character.HumanoidRootPart
			targetHRP.CFrame = hrp.CFrame * CFrame.new(2, 0, 0)
			targetHRP.AssemblyLinearVelocity = Vector3.zero
			targetHRP.AssemblyAngularVelocity = Vector3.zero
		end
	end
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then onCharacterAdded(player.Character) end

RunService.Heartbeat:Connect(function()
	if isLooping and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = player.Character.HumanoidRootPart
		for _, target in pairs(Players:GetPlayers()) do
			if table.find(loopBringUserIds, target.UserId) and target ~= player then
				if target.Character and target.Character:FindFirstChild("HumanoidRootPart") and target.Character:FindFirstChild("Humanoid") and target.Character.Humanoid.Health > 0 then
					local targetHRP = target.Character.HumanoidRootPart
					targetHRP.CFrame = hrp.CFrame * CFrame.new(2, 0, 0)
					targetHRP.AssemblyLinearVelocity = Vector3.zero
					targetHRP.AssemblyAngularVelocity = Vector3.zero
				end
			end
		end
	end
end)

-- Dragging with save
frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		local dragStart = input.Position
		local startPos = frame.Position
		local connection
		connection = UserInputService.InputChanged:Connect(function(moveInput)
			if moveInput.UserInputType == Enum.UserInputType.MouseMovement then
				local delta = moveInput.Position - dragStart
				local newX = startPos.X.Offset + delta.X
				local newY = startPos.Y.Offset + delta.Y
				frame.Position = UDim2.new(0, newX, 0, newY)
			end
		end)

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				if connection then connection:Disconnect() end
				saveGuiData()
			end
		end)
	end
end)

    end,
 })

 local Button = FunTab:CreateButton({
    Name = "Loopbring gui 2",
    Callback = function()
        local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LOCAL = Players.LocalPlayer

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UltraLoopBringGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = LOCAL:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 260, 0, 380)
frame.Position = UDim2.new(0, 20, 0.5, -190)
frame.BackgroundColor3 = Color3.fromRGB(25,25,30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = screenGui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0,8)

-- Draggable frame
local dragging = false
local dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,-20,0,30)
title.Position = UDim2.new(0,10,0,8)
title.BackgroundTransparency = 1
title.Text = "Ultra LoopBring"
title.TextColor3 = Color3.fromRGB(230,230,240)
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = frame

-- Username textbox
local userBox = Instance.new("TextBox")
userBox.Size = UDim2.new(1,-20,0,30)
userBox.Position = UDim2.new(0,10,0,45)
userBox.BackgroundColor3 = Color3.fromRGB(40,40,50)
userBox.PlaceholderText = "Enter username(s)..."
userBox.Text = ""
userBox.TextColor3 = Color3.fromRGB(255,255,255)
userBox.Font = Enum.Font.Gotham
userBox.TextSize = 14
userBox.ClearTextOnFocus = false
userBox.Parent = frame
Instance.new("UICorner", userBox).CornerRadius = UDim.new(0,6)

-- Status label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1,-20,0,20)
statusLabel.Position = UDim2.new(0,10,0,80)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Targets: none"
statusLabel.TextColor3 = Color3.fromRGB(170,170,180)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 12
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = frame

-- Start/Stop button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(1,-20,0,36)
toggleBtn.Position = UDim2.new(0,10,0,115)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60,160,90)
toggleBtn.Text = "Start LoopBring"
toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
toggleBtn.Font = Enum.Font.GothamSemibold
toggleBtn.TextSize = 16
toggleBtn.Parent = frame
Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0,6)

-- Scrolling player list
local playerList = Instance.new("ScrollingFrame")
playerList.Size = UDim2.new(1,-20,0,180)
playerList.Position = UDim2.new(0,10,0,160)
playerList.BackgroundColor3 = Color3.fromRGB(35,35,40)
playerList.BorderSizePixel = 0
playerList.ScrollBarThickness = 6
playerList.AutomaticCanvasSize = Enum.AutomaticSize.Y
playerList.Parent = frame
Instance.new("UICorner", playerList).CornerRadius = UDim.new(0,6)

-- Layout (kept)
local listLayout = Instance.new("UIListLayout", playerList)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0,5)

-- Credit
local credit = Instance.new("TextLabel")
credit.Size = UDim2.new(1,-20,0,20)
credit.Position = UDim2.new(0,10,0,350)
credit.BackgroundTransparency = 1
credit.Text = "Made by Sussy_end"
credit.TextColor3 = Color3.fromRGB(150,150,160)
credit.Font = Enum.Font.Gotham
credit.TextSize = 12
credit.TextXAlignment = Enum.TextXAlignment.Center
credit.Parent = frame

-- Helpers
local function trim(s) return (s:gsub("^%s+", ""):gsub("%s+$", "")) end

-- Targets
local targetPlayers = {}
local running = false
local renderConn = nil

-- LoopBring fast teleport
local function bringTargetFast(target, myRoot)
	if target and target.Parent and myRoot then
		-- Instant snap: temporarily reparent to nil to avoid Roblox physics/render delay
		local savedParent = target.Parent
		target.Parent = nil
		target.CFrame = myRoot.CFrame + Vector3.new(3,0,0)
		target.Parent = savedParent
	end
end

-- Add/remove targets
local function addTarget(plr)
	if not table.find(targetPlayers, plr) then
		table.insert(targetPlayers, plr)
	end
	statusLabel.TextColor3 = Color3.fromRGB(100,220,120)
	statusLabel.Text = "Targets: " .. table.concat(targetPlayers, ", ")
end

local function removeTarget(plr)
	for i, v in ipairs(targetPlayers) do
		if v == plr then
			table.remove(targetPlayers, i)
			break
		end
	end
	local list = {}
	for _,p in ipairs(targetPlayers) do table.insert(list,p.DisplayName) end
	if #list == 0 then
		statusLabel.Text = "Targets: none"
		statusLabel.TextColor3 = Color3.fromRGB(170,170,180)
	else
		statusLabel.Text = "Targets: " .. table.concat(list,", ")
		statusLabel.TextColor3 = Color3.fromRGB(100,220,120)
	end
end

-- Hook player for instant spawn + fast snap
local function hookPlayer(plr)
	plr.CharacterAdded:Connect(function(char)
		local root = char:WaitForChild("HumanoidRootPart",5)
		local myRoot = LOCAL.Character and LOCAL.Character:FindFirstChild("HumanoidRootPart")
		if root and myRoot and table.find(targetPlayers, plr) then
			bringTargetFast(root, myRoot)
		end
	end)
end

-- Player list
local function refreshPlayerList()
	for _, child in ipairs(playerList:GetChildren()) do
		if child:IsA("Frame") then child:Destroy() end
	end
	local order = 1
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LOCAL then
			hookPlayer(plr)
			local row = Instance.new("Frame")
			row.Size = UDim2.new(1,0,0,30)
			row.BackgroundTransparency = 1
			row.LayoutOrder = order
			order += 1
			row.Parent = playerList

			local nameLabel = Instance.new("TextLabel")
			nameLabel.Size = UDim2.new(1,-75,1,0)
			nameLabel.BackgroundTransparency = 1
			nameLabel.Text = plr.DisplayName.." (@"..plr.Name..")"
			nameLabel.TextColor3 = Color3.fromRGB(220,220,230)
			nameLabel.Font = Enum.Font.Gotham
			nameLabel.TextSize = 13
			nameLabel.TextXAlignment = Enum.TextXAlignment.Left
			nameLabel.TextTruncate = Enum.TextTruncate.AtEnd
			nameLabel.Parent = row

			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(0,70,1,0)
			btn.Position = UDim2.new(1,-70,0,0)
			btn.BackgroundColor3 = Color3.fromRGB(60,160,90)
			btn.Text = "Add"
			btn.TextColor3 = Color3.fromRGB(255,255,255)
			btn.Font = Enum.Font.GothamSemibold
			btn.TextSize = 13
			btn.Parent = row
			Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)

			local function updateBtn()
				if table.find(targetPlayers, plr) then
					btn.Text = "Remove"
					btn.BackgroundColor3 = Color3.fromRGB(200,80,80)
				else
					btn.Text = "Add"
					btn.BackgroundColor3 = Color3.fromRGB(60,160,90)
				end
			end
			updateBtn()

			btn.MouseButton1Click:Connect(function()
				if table.find(targetPlayers, plr) then
					removeTarget(plr)
				else
					addTarget(plr)
				end
				updateBtn()
			end)
		end
	end
end

-- Auto refresh on join/leave
Players.PlayerAdded:Connect(function(plr)
	hookPlayer(plr)
	refreshPlayerList()
end)
Players.PlayerRemoving:Connect(function(plr)
	removeTarget(plr)
	refreshPlayerList()
end)

-- Textbox re-target
userBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		local inputText = userBox.Text
		if inputText and inputText ~= "" then
			for name in inputText:gmatch("[^,%s]+") do
				local q = string.lower(trim(name))
				for _, p in ipairs(Players:GetPlayers()) do
					if string.lower(p.Name) == q or string.lower(p.DisplayName) == q then
						addTarget(p)
						break
					end
				end
			end
			refreshPlayerList()
		end
	end
end)

-- Start/Stop LoopBring
local function startLoopBring()
	if running then return end
	running = true
	toggleBtn.BackgroundColor3 = Color3.fromRGB(200,80,80)
	toggleBtn.Text = "Stop LoopBring"

	renderConn = RunService.RenderStepped:Connect(function()
		local myRoot = LOCAL.Character and LOCAL.Character:FindFirstChild("HumanoidRootPart")
		if not myRoot then return end
		for _, plr in ipairs(targetPlayers) do
			local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
			if root then
				bringTargetFast(root, myRoot)
			end
		end
	end)
end

local function stopLoopBring()
	if not running then return end
	running = false
	toggleBtn.BackgroundColor3 = Color3.fromRGB(60,160,90)
	toggleBtn.Text = "Start LoopBring"
	if renderConn then renderConn:Disconnect() renderConn=nil end
end

toggleBtn.MouseButton1Click:Connect(function()
	if running then stopLoopBring() else startLoopBring() end
end)

-- Init
for _, plr in ipairs(Players:GetPlayers()) do
	if plr ~= LOCAL then hookPlayer(plr) end
end
refreshPlayerList()
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Kill aura 2 (also good)",
    Callback = function()
        --// Setting \--
local range = 11
 
--// Variable \--
local player = game:GetService("Players").LocalPlayer
 
--// Script \--
game:GetService("RunService").RenderStepped:Connect(function()
    local p = game.Players:GetPlayers()
    for i = 2, #p do local v = p[i].Character
        if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                for i,v in next, v:GetChildren() do
                    if v:IsA("BasePart") then
                        firetouchinterest(tool.Handle,v,0)
                        firetouchinterest(tool.Handle,v,1)
                    end
                end
            end
        end
    end
end)
    end,
 })

  local FFTab = Window:CreateTab("FF", "swords")


  local Button = FFTab:CreateToggle({
    Name = "Best kill aura for loopfights rn",
    Callback = function()
        local range = 10
local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")

-- Check if the script is already active
if _G.AutoAttackActive then
    -- Disable the script
    if _G.AutoAttackConnection then
        _G.AutoAttackConnection:Disconnect()
        _G.AutoAttackConnection = nil
    end
    _G.AutoAttackActive = false
    print("AutoAttack script disabled.")
    return
end

-- Mark the script as active
_G.AutoAttackActive = true

-- Main loop
_G.AutoAttackConnection = RunService.Heartbeat:Connect(function()
    local character = player.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local tool = character:FindFirstChildOfClass("Tool")
    if not tool or not tool:FindFirstChild("Handle") then return end
    local handle = tool.Handle

    for _, other in pairs(game.Players:GetPlayers()) do
        if other ~= player then
            local char = other.Character
            if char then
                local hum = char:FindFirstChild("Humanoid")
                local otherHRP = char:FindFirstChild("HumanoidRootPart")
                if hum and hum.Health > 0 and otherHRP then
                    local dist = (otherHRP.Position - hrp.Position).Magnitude
                    if dist <= range then
                        -- Activate tool once per tick
                        tool:Activate()
                        -- Touch all parts once per tick
                        for _, part in ipairs(char:GetChildren()) do
                            if part:IsA("BasePart") then
                                firetouchinterest(handle, part, 0)
                                firetouchinterest(handle, part, 1)
                            end
                        end
                    end
                end
            end
        end
    end
end)

print("AutoAttack script enabled.")

    end,
 })

 local Button = FFTab:CreateToggle({
    Name = "Op auto equip sword",
    Callback = function()
        local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LP = Players.LocalPlayer

-- Use a global variable to track if the script is already running
if _G.ForceEquipActive then
    -- Disable the script
    if _G.ForceEquipConnection then
        _G.ForceEquipConnection:Disconnect()
        _G.ForceEquipConnection = nil
    end
    if _G.CharacterAddedConnection then
        _G.CharacterAddedConnection:Disconnect()
        _G.CharacterAddedConnection = nil
    end
    _G.ForceEquipActive = false
    print("ForceEquip script disabled.")
    return
end

-- Mark the script as active
_G.ForceEquipActive = true

local function forceEquip()
    local char = LP.Character
    if not char then return end
    local humanoid = char:FindFirstChildWhichIsA("Humanoid")
    if not humanoid then return end
    local sword = LP.Backpack:FindFirstChild("Sword")
    if sword and not char:FindFirstChild("Sword") then
        humanoid:EquipTool(sword)
    end
end

-- Connect RenderStepped
_G.ForceEquipConnection = RunService.RenderStepped:Connect(forceEquip)

-- Connect CharacterAdded
_G.CharacterAddedConnection = LP.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    char:WaitForChild("HumanoidRootPart")
    forceEquip()
end)

print("ForceEquip script enabled.")
    end,
 })

 local Toggle = FFTab:CreateToggle({
   Name = "Primordium V2",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   --// Primordium Toggle by Tracking New GUIs

-- Save baseline GUIs (before Primordium is loaded the first time)
if not getgenv().BaselineGUIs then
    getgenv().BaselineGUIs = {}
    for _, gui in ipairs(game.CoreGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            table.insert(getgenv().BaselineGUIs, gui)
        end
    end
    for _, gui in ipairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            table.insert(getgenv().BaselineGUIs, gui)
        end
    end
end

-- Cleanup function: remove any ScreenGui not in baseline
local function cleanup()
    local function shouldRemove(gui)
        for _, baseline in ipairs(getgenv().BaselineGUIs) do
            if gui == baseline then
                return false
            end
        end
        return gui:IsA("ScreenGui")
    end

    for _, gui in ipairs(game.CoreGui:GetChildren()) do
        if shouldRemove(gui) then
            gui:Destroy()
        end
    end
    for _, gui in ipairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if shouldRemove(gui) then
            gui:Destroy()
        end
    end
end

-- Toggle logic
if getgenv().PrimordiumRunning then
    print("⏹️ Primordium stopped")
    getgenv().PrimordiumRunning = false
    cleanup()
else
    print("▶️ Primordium started")
    getgenv().PrimordiumRunning = true
    cleanup() -- nuke leftovers before reload
    loadstring(game:HttpGet("https://raw.githubusercontent.com/RedstoneWare/Primordium/refs/heads/main/v2"))()
end
   end,
})

 local Toggle = FFTab:CreateToggle({
    Name = "Activate",
    Callback = function()  
        local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = workspace

-- CONFIG
local SKY_POSITION = Vector3.new(0, 50000, 0)
local SKY_PLATFORM_SIZE = Vector3.new(8, 1, 8)
local SKY_PLATFORM_OFFSET = Vector3.new(0, -3.5, 0)
local SKY_SNAP_DELAY = 0.05

local player = Players.LocalPlayer

-- Priority list for teleport after sky disabled
local TELEPORT_PRIORITY = {
    "rajcovatovykompot24",
    "macatypero69",
    "qweatez",
    "cudjdjfjfjsjajsjf"
}

-- Utility function
local function findRoot(char)
    return char:FindFirstChild("HumanoidRootPart") or char.PrimaryPart
end

local function teleportToPlayer(username)
    local target = Players:FindFirstChild(username)
    if target and target.Character then
        local root = findRoot(target.Character)
        local myRoot = findRoot(player.Character)
        if root and myRoot then
            myRoot.CFrame = root.CFrame + Vector3.new(2,0,0)
            return true
        end
    end
    return false
end

-- Toggle off if already active
if _G.SkyActive then
    -- Disable sky
    _G.SkyActive = false

    if _G.SkyPlatformConn then _G.SkyPlatformConn:Disconnect() _G.SkyPlatformConn=nil end
    if _G.SkyRespawnConn then _G.SkyRespawnConn:Disconnect() _G.SkyRespawnConn=nil end
    if _G.SkyPlatform then _G.SkyPlatform:Destroy() _G.SkyPlatform=nil end
    if _G.SkySpawn then _G.SkySpawn:Destroy() _G.SkySpawn=nil end

    print("Sky disabled")

    -- Teleport logic
    local teleported = false
    for _, username in ipairs(TELEPORT_PRIORITY) do
        if teleportToPlayer(username) then
            print("Teleported to "..username)
            teleported = true
            break
        end
    end
    if not teleported then
        print("Failed to teleport to any priority user.")
    end

    return
end

-- Enable sky
_G.SkyActive = true

-- Create platform
local platform = Instance.new("Part")
platform.Name = "SkyPlatform"
platform.Size = SKY_PLATFORM_SIZE
platform.Anchored = true
platform.CanCollide = true
platform.Transparency = 0.55
platform.Material = Enum.Material.Neon
platform.Parent = Workspace
_G.SkyPlatform = platform

-- Create invisible spawn for respawn snap
local spawn = Instance.new("SpawnLocation")
spawn.Name = "SkyRespawn"
spawn.Size = Vector3.new(6,1,6)
spawn.Anchored = true
spawn.CanCollide = false
spawn.Transparency = 1
spawn.Neutral = true
spawn.Position = SKY_POSITION
spawn.Parent = Workspace
_G.SkySpawn = spawn

-- Function to snap player & platform
local function snapCharacter(char)
    local root = findRoot(char)
    if root then
        root.CFrame = CFrame.new(SKY_POSITION + Vector3.new(0,5,0))
        platform.CFrame = root.CFrame + SKY_PLATFORM_OFFSET
    end
end

-- Follow loop
_G.SkyPlatformConn = RunService.Heartbeat:Connect(function()
    local char = player.Character
    local root = char and findRoot(char)
    if root and platform then
        local pos = root.Position + SKY_PLATFORM_OFFSET
        local lookDir = Vector3.new(root.CFrame.LookVector.X,0,root.CFrame.LookVector.Z)
        if lookDir.Magnitude > 0 then
            platform.CFrame = CFrame.new(pos, pos + lookDir.Unit)
        else
            platform.CFrame = CFrame.new(pos)
        end
    end
end)

-- Handle respawn
_G.SkyRespawnConn = player.CharacterAdded:Connect(function(char)
    task.wait(SKY_SNAP_DELAY)
    snapCharacter(char)
end)

-- Snap immediately
if player.Character then snapCharacter(player.Character) end

print("Sky enabled; platform following you!")
    end,
 })

    local Toggle = FFTab:CreateToggle({
    Name = "Activate all 4 above 👆",
    Callback = function()
        local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = workspace

-- CONFIG
local SKY_POSITION = Vector3.new(0, 50000, 0)
local SKY_PLATFORM_SIZE = Vector3.new(8, 1, 8)
local SKY_PLATFORM_OFFSET = Vector3.new(0, -3.5, 0)
local SKY_SNAP_DELAY = 0.05

local player = Players.LocalPlayer

-- Priority list for teleport after sky disabled
local TELEPORT_PRIORITY = {
    "rajcovatovykompot24",
    "macatypero69",
    "qweatez",
    "cudjdjfjfjsjajsjf"
}

-- Utility function
local function findRoot(char)
    return char:FindFirstChild("HumanoidRootPart") or char.PrimaryPart
end

local function teleportToPlayer(username)
    local target = Players:FindFirstChild(username)
    if target and target.Character then
        local root = findRoot(target.Character)
        local myRoot = findRoot(player.Character)
        if root and myRoot then
            myRoot.CFrame = root.CFrame + Vector3.new(2,0,0)
            return true
        end
    end
    return false
end

-- Toggle off if already active
if _G.SkyActive then
    -- Disable sky
    _G.SkyActive = false

    if _G.SkyPlatformConn then _G.SkyPlatformConn:Disconnect() _G.SkyPlatformConn=nil end
    if _G.SkyRespawnConn then _G.SkyRespawnConn:Disconnect() _G.SkyRespawnConn=nil end
    if _G.SkyPlatform then _G.SkyPlatform:Destroy() _G.SkyPlatform=nil end
    if _G.SkySpawn then _G.SkySpawn:Destroy() _G.SkySpawn=nil end

    print("Sky disabled")

    -- Teleport logic
    local teleported = false
    for _, username in ipairs(TELEPORT_PRIORITY) do
        if teleportToPlayer(username) then
            print("Teleported to "..username)
            teleported = true
            break
        end
    end
    if not teleported then
        print("Failed to teleport to any priority user.")
    end

    return
end

-- Enable sky
_G.SkyActive = true

-- Create platform
local platform = Instance.new("Part")
platform.Name = "SkyPlatform"
platform.Size = SKY_PLATFORM_SIZE
platform.Anchored = true
platform.CanCollide = true
platform.Transparency = 0.55
platform.Material = Enum.Material.Neon
platform.Parent = Workspace
_G.SkyPlatform = platform

-- Create invisible spawn for respawn snap
local spawn = Instance.new("SpawnLocation")
spawn.Name = "SkyRespawn"
spawn.Size = Vector3.new(6,1,6)
spawn.Anchored = true
spawn.CanCollide = false
spawn.Transparency = 1
spawn.Neutral = true
spawn.Position = SKY_POSITION
spawn.Parent = Workspace
_G.SkySpawn = spawn

-- Function to snap player & platform
local function snapCharacter(char)
    local root = findRoot(char)
    if root then
        root.CFrame = CFrame.new(SKY_POSITION + Vector3.new(0,5,0))
        platform.CFrame = root.CFrame + SKY_PLATFORM_OFFSET
    end
end

-- Follow loop
_G.SkyPlatformConn = RunService.Heartbeat:Connect(function()
    local char = player.Character
    local root = char and findRoot(char)
    if root and platform then
        local pos = root.Position + SKY_PLATFORM_OFFSET
        local lookDir = Vector3.new(root.CFrame.LookVector.X,0,root.CFrame.LookVector.Z)
        if lookDir.Magnitude > 0 then
            platform.CFrame = CFrame.new(pos, pos + lookDir.Unit)
        else
            platform.CFrame = CFrame.new(pos)
        end
    end
end)

-- Handle respawn
_G.SkyRespawnConn = player.CharacterAdded:Connect(function(char)
    task.wait(SKY_SNAP_DELAY)
    snapCharacter(char)
end)

-- Snap immediately
if player.Character then snapCharacter(player.Character) end

print("Sky enabled; platform following you!")

--

--// Primordium Toggle by Tracking New GUIs

-- Save baseline GUIs (before Primordium is loaded the first time)
if not getgenv().BaselineGUIs then
    getgenv().BaselineGUIs = {}
    for _, gui in ipairs(game.CoreGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            table.insert(getgenv().BaselineGUIs, gui)
        end
    end
    for _, gui in ipairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            table.insert(getgenv().BaselineGUIs, gui)
        end
    end
end

-- Cleanup function: remove any ScreenGui not in baseline
local function cleanup()
    local function shouldRemove(gui)
        for _, baseline in ipairs(getgenv().BaselineGUIs) do
            if gui == baseline then
                return false
            end
        end
        return gui:IsA("ScreenGui")
    end

    for _, gui in ipairs(game.CoreGui:GetChildren()) do
        if shouldRemove(gui) then
            gui:Destroy()
        end
    end
    for _, gui in ipairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if shouldRemove(gui) then
            gui:Destroy()
        end
    end
end

-- Toggle logic
if getgenv().PrimordiumRunning then
    print("⏹️ Primordium stopped")
    getgenv().PrimordiumRunning = false
    cleanup()
else
    print("▶️ Primordium started")
    getgenv().PrimordiumRunning = true
    cleanup() -- nuke leftovers before reload
    loadstring(game:HttpGet("https://raw.githubusercontent.com/RedstoneWare/Primordium/refs/heads/main/v2"))()
end

--

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LP = Players.LocalPlayer

-- Use a global variable to track if the script is already running
if _G.ForceEquipActive then
    -- Disable the script
    if _G.ForceEquipConnection then
        _G.ForceEquipConnection:Disconnect()
        _G.ForceEquipConnection = nil
    end
    if _G.CharacterAddedConnection then
        _G.CharacterAddedConnection:Disconnect()
        _G.CharacterAddedConnection = nil
    end
    _G.ForceEquipActive = false
    print("ForceEquip script disabled.")
    return
end

-- Mark the script as active
_G.ForceEquipActive = true

local function forceEquip()
    local char = LP.Character
    if not char then return end
    local humanoid = char:FindFirstChildWhichIsA("Humanoid")
    if not humanoid then return end
    local sword = LP.Backpack:FindFirstChild("Sword")
    if sword and not char:FindFirstChild("Sword") then
        humanoid:EquipTool(sword)
    end
end

-- Connect RenderStepped
_G.ForceEquipConnection = RunService.RenderStepped:Connect(forceEquip)

-- Connect CharacterAdded
_G.CharacterAddedConnection = LP.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    char:WaitForChild("HumanoidRootPart")
    forceEquip()
end)

print("ForceEquip script enabled.")

--

local range = 10
local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")

-- Check if the script is already active
if _G.AutoAttackActive then
    -- Disable the script
    if _G.AutoAttackConnection then
        _G.AutoAttackConnection:Disconnect()
        _G.AutoAttackConnection = nil
    end
    _G.AutoAttackActive = false
    print("AutoAttack script disabled.")
    return
end

-- Mark the script as active
_G.AutoAttackActive = true

-- Main loop
_G.AutoAttackConnection = RunService.Heartbeat:Connect(function()
    local character = player.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local tool = character:FindFirstChildOfClass("Tool")
    if not tool or not tool:FindFirstChild("Handle") then return end
    local handle = tool.Handle

    for _, other in pairs(game.Players:GetPlayers()) do
        if other ~= player then
            local char = other.Character
            if char then
                local hum = char:FindFirstChild("Humanoid")
                local otherHRP = char:FindFirstChild("HumanoidRootPart")
                if hum and hum.Health > 0 and otherHRP then
                    local dist = (otherHRP.Position - hrp.Position).Magnitude
                    if dist <= range then
                        -- Activate tool once per tick
                        tool:Activate()
                        -- Touch all parts once per tick
                        for _, part in ipairs(char:GetChildren()) do
                            if part:IsA("BasePart") then
                                firetouchinterest(handle, part, 0)
                                firetouchinterest(handle, part, 1)
                            end
                        end
                    end
                end
            end
        end
    end
end)

print("AutoAttack script enabled.")

    end,
 })
 
 local Input = FunTab:CreateInput({
   Name = "Ff stuff for fun 👇",
   CurrentValue = "",
   PlaceholderText = "Input Placeholder",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
   -- The function that takes place when the input is changed
   -- The variable (Text) is a string for the value in the text box
   end,
})


local Button = FunTab:CreateButton({
    Name = "Unlock all swords (Flex fight only)",
    Callback = function()
        game.ReplicatedStorage.UnlockedSwords:FireServer({true, true, true}, "894An3ti44Ex321P3llo99i3t")
    end,
 })

  local Toggle = FunTab:CreateToggle({
    Name = "Lvl script",
    Callback = function()
        -- Toggle off if already running
if _G.LVLUP_CONN then
    _G.lvlup = false
    _G.LVLUP_CONN:Disconnect()
    _G.LVLUP_CONN = nil
    print("Level-up loop stopped.")
    return
end

-- Start loop
_G.lvlup = true

-- Use RunService to allow clean disconnect
local RunService = game:GetService("RunService")
local conn
conn = RunService.Heartbeat:Connect(function()
    if not _G.lvlup then
        if conn then conn:Disconnect() _G.LVLUP_CONN = nil end
        return
    end
end)
_G.LVLUP_CONN = conn

-- Actual looping
task.spawn(function()
    while _G.lvlup do
        wait(2.2)
        for i = 2, 200 do
            pcall(function()
                game:GetService("ReplicatedStorage").ClaimChallenge:FireServer(5, "An5nit43534per3plo34itdfs")
            end)
        end
    end
end)

print("Level-up loop started.")
    end,
 })

 local Toggle = FunTab:CreateToggle({
   Name = "Time script",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   --// Toggle Exploit Script
if getgenv().TimeChangerRunning then
    -- If already running, stop it
    getgenv().TimeChangerRunning = false
    print("⏹️ TimeChanger stopped")
else
    -- If not running, start it
    getgenv().TimeChangerRunning = true
    print("▶️ TimeChanger started")

    task.spawn(function()
        while getgenv().TimeChangerRunning do
            for i = 1, 80000 do
                if not getgenv().TimeChangerRunning then break end
                game.ReplicatedStorage.ChangeTime:FireServer("Anti333Exploitz123FF45324", 433, 429)
                task.wait() -- prevent lag / crash
            end
            task.wait()
        end
    end)
end
   end,
})


 local CreditsTab = Window:CreateTab("Credits", "users") -- Title, Image

 local Button = CreditsTab:CreateButton({
    Name = "Credits: Sussy_end",
    Callback = function()
        print ("helloXD")
    end,
 })

 local Button = CreditsTab:CreateButton({
    Name = "Reviewed by: My beautiful girlfriend :D",
    Callback = function()
        print ("helloXD")
    end,
 })
